---
import Footer from "@components/Footer.astro";
---

<!doctype html>
<html id="untyping" lang="en">
  <head>
    <title>SchemeUnit 3: A New Approach to Testing - Untyping</title>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link rel="stylesheet" type="text/css" href="/styles/screen.css" />
  </head>

  <body class="myna" data-goal="load">
    <header id="top">
      <div class="container">
        <div class="row">
          <div class="span5 offset7">
            <div class="overlay title">
              <a href="/untyping">
                <h1>
                  <img src="/styles/images/untyping-logo.png" alt="Untyping" />
                </h1>
                <span class="strapline">The Untyped Weblog.</span>
              </a>
            </div>

            <div class="overlay about">
              Read on or <a href="/">return home.</a>
            </div>
          </div>
        </div>
      </div>

      <div class="shadow bottom"></div>
    </header>

    <div id="navbar-wrapper">
      <nav id="navbar" class="navbar">
        <div class="navbar-inner">
          <div class="container">
            <ul class="nav">
              <li><a href="/#top">Home</a></li>
              <li><a href="/untyping">Weblog</a></li>
              <li><a href="#contact">Contact</a></li>
            </ul>
          </div>
        </div>
      </nav>
    </div>

    <div class="shadow-wrapper">
      <div class="shadow top light"></div>

      <div class="container">
        <div class="row">
          <div id="blog" class="span10">
            <section
              id="post-116"
              class="post-116 post type-post status-publish format-standard hentry category-code"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">31 Jul 2008</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2008/07/31/schemeunit-3-a-new-approach-to-testing/"
                      rel="bookmark"
                      title="Permanent Link to SchemeUnit 3: A New Approach to Testing"
                      >SchemeUnit 3: A New Approach to Testing</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      <a
                        href="http://planet.plt-scheme.org/display.ss?package=schemeunit.plt&owner=schematics"
                        >SchemeUnit</a
                      > 3 has been released. Although the interface remains
                      compatible with version 2 the underlying philosophy of
                      SchemeUnit has changed in a significant way. The following
                      is extract from the SchemeUnit manual, describing the new
                      approach.
                    </p>
                    <p>
                      SchemeUnit is designed to allow tests to evolve in step
                      with<br />
                      the evolution of the program under testing. SchemeUnit<br
                      />
                      scales from the unstructed checks suitable for simple<br
                      />
                      programs to the complex structure necessary for large<br
                      />
                      projects.
                    </p>
                    <p>
                      Simple programs, such as those in How to Design Programs,<br
                      />
                      are generally purely functional with no setup required to<br
                      />
                      obtain a context in which the function may operate.<br />
                      Therefore the tests for these programs are extremely simple:<br
                      />
                      the test expressions are single checks, usually for<br />
                      equality, and there are no dependencies between expressions.<br
                      />
                      For example, a HtDP student may be writing simple list<br
                      />
                      functions such as length, and the properties they are<br
                      />
                      checking are of the form:
                    </p>
                    <div>
                      <pre
                        is:raw>
(equal? (length null) 0)
(equal? (length '(a)) 1)
(equal? (length '(a b)) 2)</pre>
                    </div>
                    <p>
                      SchemeUnit directly supports this style of testing. A
                      check<br />
                      on its own is a valid test. So the above examples may be<br
                      />
                      written in SchemeUnit as:
                    </p>
                    <div>
                      <pre
                        is:raw>
(check-equal? (length null) 0)
(check-equal? (length '(a)) 1)
(check-equal? (length '(a b)) 2)</pre>
                    </div>
                    <p>
                      Simple programs now get all the benefits of SchemeUnit
                      with<br />
                      very little overhead.
                    </p>
                    <p>
                      There are limitations to this style of testing that more<br
                      />
                      complex programs will expose. For example, there might be<br
                      />
                      dependencies between expressions, caused by state, so that<br
                      />
                      it does not make sense to evaluate some expressions if<br
                      />
                      earlier ones have failed. This type of program needs a way<br
                      />
                      to group expressions so that a failure in one group causes<br
                      />
                      evaluation of that group to stop and immediately proceed to<br
                      />
                      the next group. In SchemeUnit all that is required is to<br
                      />
                      wrap a test-begin expression around a group of<br />
                      expressions:
                    </p>
                    <div>
                      <pre
                        is:raw>
(test-begin
(setup-some-state!)
(check-equal? (foo! 1) 'expected-value-1)
(check-equal? (foo! 2) 'expected-value-2))</pre>
                    </div>
                    <p>Now if any expression within the test-begin</p>
                    <p>
                      expression fails no further expressions in that group will<br
                      />
                      be evaluated.
                    </p>
                    <p>
                      Notice that all the previous tests written in the simple<br
                      />
                      style are still valid. Introducing grouping is a local<br
                      />
                      change only. This is a key feature of SchemeUnit’s support<br
                      />
                      for the evolution of the program.
                    </p>
                    <p>
                      The programmer may wish to name a group of tests. This is<br
                      />
                      done using the test-case expression, a simple<br />
                      variant on test-begin:
                    </p>
                    <div>
                      <pre
                        is:raw>
(test-case
"The name"
... test expressions ...)</pre>
                    </div>
                    <p>
                      Most programs will stick with this style. However,<br />
                      programmers writing very complex programs may wish to<br
                      />
                      maintain separate groups of tests for different parts of the<br
                      />
                      program, or run their tests in different ways to the normal<br
                      />
                      SchemeUnit manner (for example, test results may be logged<br
                      />
                      for the purpose of improving software quality, or they may<br
                      />
                      be displayed on a website to indicate service quality). For<br
                      />
                      these programmers it is necessary to delay the execution of<br
                      />
                      tests so they can processed in the programmer’s chosen<br
                      />
                      manner. To do this, the programmer simply wraps a test-suite<br
                      />
                      around their tests:
                    </p>
                    <div>
                      <pre
                        is:raw>
(test-suite
"Suite name"
(check ...)
(test-begin ...)
(test-case ...))</pre>
                    </div>
                    <p>
                      The tests now change from expressions that are immediately<br
                      />
                      evaluated to objects that may be programmatically<br />
                      manipulated. Note again this is a local change. Tests<br
                      />
                      outside the suite continue to evaluate as before.
                    </p>
                    <h4>
                      2.1<tt> </tt><a name="(part._.Historical_.Context)"
                      ></a>Historical Context
                    </h4>
                    <p>
                      Most testing frameworks, including earlier versions of<br
                      />
                      SchemeUnit, support only the final form of testing. This is<br
                      />
                      likely due to the influence of the SUnit testing framework,<br
                      />
                      which is the ancestor of SchemeUnit and the most widely used<br
                      />
                      frameworks in Java, .Net, Python, and Ruby, and many other<br
                      />
                      languages. That this is insufficient for all users is<br
                      />
                      apparent if one considers the proliferation of “simpler”<br
                      />
                      testing frameworks in Scheme such as SRFI-78, or the the<br
                      />
                      practice of beginner programmers. Unfortunately these<br
                      />
                      simpler methods are inadequate for testing larger<br />
                      systems. To the best of my knowledge SchemeUnit is the only<br
                      />
                      testing framework that makes a conscious effort to support<br
                      />
                      the testing style of all levels of programmer.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/code/" rel="category tag"
                      >Code</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on SchemeUnit 3: A New Approach to Testing</span
                      ></span
                    >
                  </p>

                  <p class="postmetadata alt">
                    <small>
                      This entry was posted on Thursday, July 31st, 2008 at 8:54
                      pm and is filed under
                      <a href="/untyping/category/code/" rel="category tag"
                        >Code</a
                      >. You can follow any responses to this entry through the
                      <a
                        href="/untyping/2008/07/31/schemeunit-3-a-new-approach-to-testing/feed/"
                        >RSS 2.0</a
                      >
                      feed. Both comments and pings are currently closed.
                    </small>
                  </p>

                  <!-- You can start editing here. -->

                  <!-- If comments are closed. -->
                  <p class="nocomments">Comments are closed.</p>
                </div>
              </div>
            </section>

            <nav>
              <div class="row">
                <div class="span8 offset2">
                  <span class="newer">&laquo; Newer Entry</span>
                  <span class="older">Older Entry &raquo;</span>
                  <div class="clear"></div>
                </div>
              </div>
            </nav>
          </div>
          <div class="span2">
            <div id="sidebar" class="small column two-of-two width300">
              <ul>
                <li id="recent-posts-2" class="widget widget_recent_entries">
                  <h2 class="widgettitle">Recent Posts</h2>
                  <ul>
                    <li>
                      <a
                        href="/untyping/2013/08/07/writing-documentation-using-grunt-and-jekyll/"
                        >Writing Documentation using Grunt and Jekyll</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/10/19/meanwhile-at-untyped-hq/"
                        >Meanwhile, at Untyped HQ&#8230;</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/08/28/new-site/">New site</a>
                    </li>
                    <li>
                      <a
                        href="/untyping/2012/06/06/myna-for-wordpress-available-now/"
                        >Myna for WordPress available now!</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2011/10/20/the-circus-is-in-town/"
                        >The Circus is in Town</a
                      >
                    </li>
                  </ul>
                </li>
                <li
                  id="recent-comments-2"
                  class="widget widget_recent_comments"
                >
                  <h2 class="widgettitle">Recent Comments</h2>
                  <ul id="recentcomments"></ul>
                </li>
                <li id="archives-2" class="widget widget_archive">
                  <h2 class="widgettitle">Archives</h2>
                  <ul>
                    <li><a href="/untyping/2013/08/">August 2013</a></li>
                    <li><a href="/untyping/2012/10/">October 2012</a></li>
                    <li><a href="/untyping/2012/08/">August 2012</a></li>
                    <li><a href="/untyping/2012/06/">June 2012</a></li>
                    <li><a href="/untyping/2011/10/">October 2011</a></li>
                    <li><a href="/untyping/2011/09/">September 2011</a></li>
                    <li><a href="/untyping/2011/08/">August 2011</a></li>
                    <li><a href="/untyping/2011/05/">May 2011</a></li>
                    <li><a href="/untyping/2011/03/">March 2011</a></li>
                    <li><a href="/untyping/2011/02/">February 2011</a></li>
                    <li><a href="/untyping/2011/01/">January 2011</a></li>
                    <li><a href="/untyping/2010/12/">December 2010</a></li>
                    <li><a href="/untyping/2010/11/">November 2010</a></li>
                    <li><a href="/untyping/2010/10/">October 2010</a></li>
                    <li><a href="/untyping/2010/07/">July 2010</a></li>
                    <li><a href="/untyping/2010/06/">June 2010</a></li>
                    <li><a href="/untyping/2010/05/">May 2010</a></li>
                    <li><a href="/untyping/2010/04/">April 2010</a></li>
                    <li><a href="/untyping/2010/03/">March 2010</a></li>
                    <li><a href="/untyping/2010/02/">February 2010</a></li>
                    <li><a href="/untyping/2010/01/">January 2010</a></li>
                    <li><a href="/untyping/2009/07/">July 2009</a></li>
                    <li><a href="/untyping/2009/06/">June 2009</a></li>
                    <li><a href="/untyping/2009/04/">April 2009</a></li>
                    <li><a href="/untyping/2009/03/">March 2009</a></li>
                    <li><a href="/untyping/2009/01/">January 2009</a></li>
                    <li><a href="/untyping/2008/11/">November 2008</a></li>
                    <li><a href="/untyping/2008/10/">October 2008</a></li>
                    <li><a href="/untyping/2008/09/">September 2008</a></li>
                    <li><a href="/untyping/2008/08/">August 2008</a></li>
                    <li><a href="/untyping/2008/07/">July 2008</a></li>
                    <li><a href="/untyping/2008/06/">June 2008</a></li>
                    <li><a href="/untyping/2008/05/">May 2008</a></li>
                    <li><a href="/untyping/2008/04/">April 2008</a></li>
                    <li><a href="/untyping/2008/03/">March 2008</a></li>
                    <li><a href="/untyping/2008/02/">February 2008</a></li>
                    <li><a href="/untyping/2008/01/">January 2008</a></li>
                    <li><a href="/untyping/2007/12/">December 2007</a></li>
                    <li><a href="/untyping/2007/11/">November 2007</a></li>
                    <li><a href="/untyping/2007/10/">October 2007</a></li>
                    <li><a href="/untyping/2007/09/">September 2007</a></li>
                    <li><a href="/untyping/2007/08/">August 2007</a></li>
                    <li><a href="/untyping/2007/07/">July 2007</a></li>
                    <li><a href="/untyping/2007/06/">June 2007</a></li>
                    <li><a href="/untyping/2007/05/">May 2007</a></li>
                    <li><a href="/untyping/2007/04/">April 2007</a></li>
                    <li><a href="/untyping/2007/03/">March 2007</a></li>
                    <li><a href="/untyping/2007/02/">February 2007</a></li>
                    <li><a href="/untyping/2007/01/">January 2007</a></li>
                    <li><a href="/untyping/2006/12/">December 2006</a></li>
                    <li><a href="/untyping/2006/11/">November 2006</a></li>
                    <li><a href="/untyping/2006/10/">October 2006</a></li>
                    <li><a href="/untyping/2006/09/">September 2006</a></li>
                    <li><a href="/untyping/2006/08/">August 2006</a></li>
                    <li><a href="/untyping/2006/07/">July 2006</a></li>
                    <li><a href="/untyping/2006/06/">June 2006</a></li>
                    <li><a href="/untyping/2006/05/">May 2006</a></li>
                    <li><a href="/untyping/2006/04/">April 2006</a></li>
                    <li><a href="/untyping/2006/03/">March 2006</a></li>
                    <li><a href="/untyping/2006/02/">February 2006</a></li>
                    <li><a href="/untyping/2006/01/">January 2006</a></li>
                    <li><a href="/untyping/2005/12/">December 2005</a></li>
                    <li><a href="/untyping/2005/11/">November 2005</a></li>
                    <li><a href="/untyping/2005/10/">October 2005</a></li>
                    <li><a href="/untyping/2005/09/">September 2005</a></li>
                    <li><a href="/untyping/2005/08/">August 2005</a></li>
                    <li><a href="/untyping/2005/07/">July 2005</a></li>
                    <li><a href="/untyping/2005/06/">June 2005</a></li>
                    <li><a href="/untyping/2005/05/">May 2005</a></li>
                    <li><a href="/untyping/2005/04/">April 2005</a></li>
                  </ul>
                </li>
                <li id="categories-2" class="widget widget_categories">
                  <h2 class="widgettitle">Categories</h2>
                  <ul>
                    <li class="cat-item cat-item-10">
                      <a href="/untyping/category/business/">Business</a>
                    </li>
                    <li class="cat-item cat-item-7">
                      <a href="/untyping/category/code/">Code</a>
                    </li>
                    <li class="cat-item cat-item-11">
                      <a href="/untyping/category/design/">Design</a>
                    </li>
                    <li class="cat-item cat-item-3">
                      <a href="/untyping/category/front-page/">Front page</a>
                    </li>
                    <li class="cat-item cat-item-9">
                      <a href="/untyping/category/fun/">Fun</a>
                    </li>
                    <li class="cat-item cat-item-6">
                      <a href="/untyping/category/functional-programming/"
                        >Functional Programming</a
                      >
                    </li>
                    <li class="cat-item cat-item-1">
                      <a href="/untyping/category/general/">General</a>
                    </li>
                    <li class="cat-item cat-item-12">
                      <a href="/untyping/category/javascript/">Javascript</a>
                    </li>
                    <li class="cat-item cat-item-14">
                      <a href="/untyping/category/kahu/">Kahu</a>
                    </li>
                    <li class="cat-item cat-item-4">
                      <a href="/untyping/category/myna/">Myna</a>
                    </li>
                    <li class="cat-item cat-item-13">
                      <a href="/untyping/category/racket/">Racket</a>
                    </li>
                    <li class="cat-item cat-item-8">
                      <a href="/untyping/category/scala/">Scala</a>
                    </li>
                    <li class="cat-item cat-item-5">
                      <a href="/untyping/category/web-development/"
                        >Web development</a
                      >
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <Footer />
    <script
      src="http://www.google-analytics.com/urchin.js"
      type="text/javascript"></script>
    <script type="text/javascript">
      _uacct = "UA-183641-1";
      urchinTracker();
    </script>
    <script is:inline src="//code.jquery.com/jquery-1.8.0.min.js"></script>
    <script is:inline src="/scripts/untyped.js"></script>

    <script
      type="text/javascript"
      src="/wp-includes/js/comment-reply.min.js?ver=6.6.2"
      id="comment-reply-js"
      async="async"
      data-wp-strategy="async"></script>
  </body>
</html>
