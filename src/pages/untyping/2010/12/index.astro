---
import Footer from "@components/Footer.astro";
---

<!doctype html>
<html id="untyping" lang="en">
  <head>
    <title>December - 2010 - Untyping</title>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link rel="stylesheet" type="text/css" href="/styles/screen.css" />


    </style>

  </head>

  <body class="myna" data-goal="load">
    <header id="top">
      <div class="container">
        <div class="row">
          <div class="span5 offset7">
            <div class="overlay title">
              <a href="/untyping">
                <h1>
                  <img src="/styles/images/untyping-logo.png" alt="Untyping" />
                </h1>
                <span class="strapline">The Untyped Weblog.</span>
              </a>
            </div>

            <div class="overlay about">
              Read on or <a href="/">return home.</a>
            </div>
          </div>
        </div>
      </div>

      <div class="shadow bottom"></div>
    </header>

    <div id="navbar-wrapper">
      <nav id="navbar" class="navbar">
        <div class="navbar-inner">
          <div class="container">
            <ul class="nav">
              <li><a href="/#top">Home</a></li>
              <li><a href="/untyping">Weblog</a></li>
              <li><a href="#contact">Contact</a></li>
            </ul>
          </div>
        </div>
      </nav>
    </div>

    <div class="shadow-wrapper">
      <div class="shadow top light"></div>

      <div class="container">
        <h1 class="pagetitle">Archive for December, 2010</h1>

        <div class="row">
          <div id="blog" class="span10">
            <section
              id="post-46"
              class="post-46 post type-post status-publish format-standard hentry category-code category-functional-programming category-scala category-web-development"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">1 Dec 2010</p>
                  <p class="author">by Dave</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2010/12/01/file-upload-using-comet-actors/"
                      rel="bookmark"
                      title="Permanent Link to File upload using Comet Actors"
                      >File upload using Comet Actors</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      We’ve been using the <a href="http://liftweb.net/">Lift</a
                      > web framework for a lot of web development work
                      recently, and we’re very impressed some of its features.
                      Lift’s Comet support, in particular, is a blessing for the
                      kind of data-crunching back-end web sites we typically get
                      involved in.
                    </p>
                    <p>
                      Importing data from uploaded files, for example,
                      frequently causes trouble. An import can take from a few
                      seconds to a few minutes depending on the size of the file
                      and the complexity of the data processing and validation
                      involved. If the import takes more than a few seconds
                      there is an increasing risk that the web browser will time
                      out. If this happens we fail, because the user won’t know
                      whether the import succeeded or not. Lift’s Comet actors
                      provide a simple way around this problem. But before
                      describing how they work, let’s quickly go over <a
                        href="http://en.wikipedia.org/wiki/Comet_(programming)"
                        >Comet</a
                      > and <a href="http://en.wikipedia.org/wiki/Actor_model"
                        >actors</a
                      >.
                    </p>
                    <p>
                      Comet is a way of doing push notifications over HTTP,
                      which on the face of it appears to only support pull.
                      Without the jargon, this means a way of allowing the
                      server to send information to the web browser when that
                      information is ready, not when the web browser checks for
                      it. This gives us a better interface, as the UI can
                      instantly reflect new data, and better resource
                      consumption, as the client doesn’t have to continuously
                      poll the server.
                    </p>
                    <p>
                      There are two or three common ways of <a
                        href="http://en.wikipedia.org/wiki/Comet_(programming)#Implementations"
                        >implementing Comet</a
                      >. Lift uses a mechanism called “long polling”, which
                      implements Comet using plain old AJAX. As soon as the web
                      page loads, the web browser sends an XMLHTTP request to
                      the server. Instead of replying immediately the server
                      keeps the connection around until it has information to
                      push back. When information is available, the web server
                      responds to the HTTP request, and the browser processes
                      the response and immediately makes another request.  In
                      other words, long polling uses HTTP’s pull mechanism to
                      simulate push communication. This is all well and good,
                      but it immediately raises two issues: how do we manage a
                      large number of open, but idle, connections without
                      swamping the server, and what programming model do we use
                      to manage the additional complexity of Comet applications.
                    </p>
                    <p>
                      Handing many idle open connections is relatively simple.
                      The traditional model is to use one thread per request,
                      but this doesn’t scale when many requests are idle for
                      long periods. All modern operating systems provide a
                      scalable event notification system, such as <a
                        href="http://en.wikipedia.org/wiki/Epoll">epoll</a
                      > or <a href="http://en.wikipedia.org/wiki/Kqueue"
                        >kqueue</a
                      >, allowing a single thread to simultaneously monitor many
                      connections for data. The JVM provides access to these
                      systems via the <a
                        href="http://download.oracle.com/javase/6/docs/api/java/nio/channels/Selector.html"
                        >Selector</a
                      > abstraction in the <a
                        href="http://en.wikipedia.org/wiki/New_I/O">NIO</a
                      > package. All this is taken care of in the web framework,
                      so the application programmer does not need to be aware of
                      it. (Note that other languages present the same facilities
                      in different ways. Erlang, for example, presents all IO
                      operations as blocking, but the implementation uses the
                      same scalable non-blocking OS services as the JVM. Erlang
                      can do this as it doesn’t use as many resources per thread
                      as the JVM does. This is an appealing choice as it
                      provides a uniformity not found on the JVM, but impacts
                      how Erlang handles multicore.)
                    </p>
                    <p>
                      More relevant to the application programmer is the
                      programming model used for Comet, and this is where actors
                      come in. An actor is basically a thread with the important
                      restriction that it only communicates with the outside
                      world via messages. To ask an actor to do something, you
                      send it a message. This is rather like a method call,
                      except that the actor queues the message and processes it
                      asynchronously. When an actor wants to communicate with
                      another resource, it sends that resource a message. Since
                      actors never share state with each other, there is never a
                      need to lock resources to avoid concurrent access. This is
                      a great model because all the complexities of programming
                      with locks disappear. If you are interested in more
                      information on the actor model in Scala try <a
                        href="http://lamp.epfl.ch/~phaller/actors.html"
                        >here for the original papers</a
                      >, <a href="http://akkasource.org/"
                        >here for the Akka framework</a
                      > and <a
                        href="http://blog.lostlake.org/index.php?/archives/96-Migrating-from-Scala-Actors-to-Lift-Actors.html"
                        >here for a bit on Lift’s actors</a
                      >.
                    </p>
                    <p>
                      Actors are a natural fit for Comet. On the server each
                      Comet connection is handled by a <em>Comet actor,</em
                      > whose job it is to manage communication with a connected
                      browser. Each actor is bound to a single user’s session,
                      but actors persist across web requests. We can
                      asynchronously send an actor messages (whether the user is
                      looking at the web page or not), and have the actor buffer
                      them for transmission to the browser. This means we’ve got
                      almost all of our file upload functionality straight out
                      of the box, without having to do any particularly tricky
                      development.
                    </p>
                    <p>
                      We put a proof-of-concept of the file uploader <a
                        href="https://github.com/junglebarry/CometImport"
                        >on Github</a
                      >. The basic structure of the code is:
                    </p>
                    <ul>
                      <li>
                        When a file is uploaded it is handed off to a thread for
                        processing, and a Comet actor is started to communicate
                        with the client.
                      </li>
                      <li>
                        The processing thread periodically sends messages to the
                        actor, informing it of progress on the file upload.
                      </li>
                      <li>
                        The Comet actor in turn communicates progress to the
                        client.
                      </li>
                    </ul>
                    <p>
                      The great thing about this arrangement is that the user
                      can navigate away from the page without aborting the file
                      upload, and if they later return to the page they will get
                      a progress update. It makes for a very pleasant UI.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/code/" rel="category tag"
                      >Code</a
                    >,
                    <a
                      href="/untyping/category/functional-programming/"
                      rel="category tag">Functional Programming</a
                    >,
                    <a href="/untyping/category/scala/" rel="category tag"
                      >Scala</a
                    >,
                    <a
                      href="/untyping/category/web-development/"
                      rel="category tag">Web development</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on File upload using Comet Actors</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <nav>
              <div class="row">
                <div class="span8 offset2">
                  <span class="newer"></span>
                  <span class="older"></span>
                  <div class="clear"></div>
                </div>
              </div>
            </nav>
          </div>
          <div class="span2">
            <div id="sidebar" class="small column two-of-two width300">
              <ul>
                <li id="recent-posts-2" class="widget widget_recent_entries">
                  <h2 class="widgettitle">Recent Posts</h2>
                  <ul>
                    <li>
                      <a
                        href="/untyping/2013/08/07/writing-documentation-using-grunt-and-jekyll/"
                        >Writing Documentation using Grunt and Jekyll</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/10/19/meanwhile-at-untyped-hq/"
                        >Meanwhile, at Untyped HQ&#8230;</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/08/28/new-site/">New site</a>
                    </li>
                    <li>
                      <a
                        href="/untyping/2012/06/06/myna-for-wordpress-available-now/"
                        >Myna for WordPress available now!</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2011/10/20/the-circus-is-in-town/"
                        >The Circus is in Town</a
                      >
                    </li>
                  </ul>
                </li>
                <li
                  id="recent-comments-2"
                  class="widget widget_recent_comments"
                >
                  <h2 class="widgettitle">Recent Comments</h2>
                  <ul id="recentcomments"></ul>
                </li>
                <li id="archives-2" class="widget widget_archive">
                  <h2 class="widgettitle">Archives</h2>
                  <ul>
                    <li><a href="/untyping/2013/08/">August 2013</a></li>
                    <li><a href="/untyping/2012/10/">October 2012</a></li>
                    <li><a href="/untyping/2012/08/">August 2012</a></li>
                    <li><a href="/untyping/2012/06/">June 2012</a></li>
                    <li><a href="/untyping/2011/10/">October 2011</a></li>
                    <li><a href="/untyping/2011/09/">September 2011</a></li>
                    <li><a href="/untyping/2011/08/">August 2011</a></li>
                    <li><a href="/untyping/2011/05/">May 2011</a></li>
                    <li><a href="/untyping/2011/03/">March 2011</a></li>
                    <li><a href="/untyping/2011/02/">February 2011</a></li>
                    <li><a href="/untyping/2011/01/">January 2011</a></li>
                    <li>
                      <a href="/untyping/2010/12/" aria-current="page"
                        >December 2010</a
                      >
                    </li>
                    <li><a href="/untyping/2010/11/">November 2010</a></li>
                    <li><a href="/untyping/2010/10/">October 2010</a></li>
                    <li><a href="/untyping/2010/07/">July 2010</a></li>
                    <li><a href="/untyping/2010/06/">June 2010</a></li>
                    <li><a href="/untyping/2010/05/">May 2010</a></li>
                    <li><a href="/untyping/2010/04/">April 2010</a></li>
                    <li><a href="/untyping/2010/03/">March 2010</a></li>
                    <li><a href="/untyping/2010/02/">February 2010</a></li>
                    <li><a href="/untyping/2010/01/">January 2010</a></li>
                    <li><a href="/untyping/2009/07/">July 2009</a></li>
                    <li><a href="/untyping/2009/06/">June 2009</a></li>
                    <li><a href="/untyping/2009/04/">April 2009</a></li>
                    <li><a href="/untyping/2009/03/">March 2009</a></li>
                    <li><a href="/untyping/2009/01/">January 2009</a></li>
                    <li><a href="/untyping/2008/11/">November 2008</a></li>
                    <li><a href="/untyping/2008/10/">October 2008</a></li>
                    <li><a href="/untyping/2008/09/">September 2008</a></li>
                    <li><a href="/untyping/2008/08/">August 2008</a></li>
                    <li><a href="/untyping/2008/07/">July 2008</a></li>
                    <li><a href="/untyping/2008/06/">June 2008</a></li>
                    <li><a href="/untyping/2008/05/">May 2008</a></li>
                    <li><a href="/untyping/2008/04/">April 2008</a></li>
                    <li><a href="/untyping/2008/03/">March 2008</a></li>
                    <li><a href="/untyping/2008/02/">February 2008</a></li>
                    <li><a href="/untyping/2008/01/">January 2008</a></li>
                    <li><a href="/untyping/2007/12/">December 2007</a></li>
                    <li><a href="/untyping/2007/11/">November 2007</a></li>
                    <li><a href="/untyping/2007/10/">October 2007</a></li>
                    <li><a href="/untyping/2007/09/">September 2007</a></li>
                    <li><a href="/untyping/2007/08/">August 2007</a></li>
                    <li><a href="/untyping/2007/07/">July 2007</a></li>
                    <li><a href="/untyping/2007/06/">June 2007</a></li>
                    <li><a href="/untyping/2007/05/">May 2007</a></li>
                    <li><a href="/untyping/2007/04/">April 2007</a></li>
                    <li><a href="/untyping/2007/03/">March 2007</a></li>
                    <li><a href="/untyping/2007/02/">February 2007</a></li>
                    <li><a href="/untyping/2007/01/">January 2007</a></li>
                    <li><a href="/untyping/2006/12/">December 2006</a></li>
                    <li><a href="/untyping/2006/11/">November 2006</a></li>
                    <li><a href="/untyping/2006/10/">October 2006</a></li>
                    <li><a href="/untyping/2006/09/">September 2006</a></li>
                    <li><a href="/untyping/2006/08/">August 2006</a></li>
                    <li><a href="/untyping/2006/07/">July 2006</a></li>
                    <li><a href="/untyping/2006/06/">June 2006</a></li>
                    <li><a href="/untyping/2006/05/">May 2006</a></li>
                    <li><a href="/untyping/2006/04/">April 2006</a></li>
                    <li><a href="/untyping/2006/03/">March 2006</a></li>
                    <li><a href="/untyping/2006/02/">February 2006</a></li>
                    <li><a href="/untyping/2006/01/">January 2006</a></li>
                    <li><a href="/untyping/2005/12/">December 2005</a></li>
                    <li><a href="/untyping/2005/11/">November 2005</a></li>
                    <li><a href="/untyping/2005/10/">October 2005</a></li>
                    <li><a href="/untyping/2005/09/">September 2005</a></li>
                    <li><a href="/untyping/2005/08/">August 2005</a></li>
                    <li><a href="/untyping/2005/07/">July 2005</a></li>
                    <li><a href="/untyping/2005/06/">June 2005</a></li>
                    <li><a href="/untyping/2005/05/">May 2005</a></li>
                    <li><a href="/untyping/2005/04/">April 2005</a></li>
                  </ul>
                </li>
                <li id="categories-2" class="widget widget_categories">
                  <h2 class="widgettitle">Categories</h2>
                  <ul>
                    <li class="cat-item cat-item-10">
                      <a href="/untyping/category/business/">Business</a>
                    </li>
                    <li class="cat-item cat-item-7">
                      <a href="/untyping/category/code/">Code</a>
                    </li>
                    <li class="cat-item cat-item-11">
                      <a href="/untyping/category/design/">Design</a>
                    </li>
                    <li class="cat-item cat-item-3">
                      <a href="/untyping/category/front-page/">Front page</a>
                    </li>
                    <li class="cat-item cat-item-9">
                      <a href="/untyping/category/fun/">Fun</a>
                    </li>
                    <li class="cat-item cat-item-6">
                      <a href="/untyping/category/functional-programming/"
                        >Functional Programming</a
                      >
                    </li>
                    <li class="cat-item cat-item-1">
                      <a href="/untyping/category/general/">General</a>
                    </li>
                    <li class="cat-item cat-item-12">
                      <a href="/untyping/category/javascript/">Javascript</a>
                    </li>
                    <li class="cat-item cat-item-14">
                      <a href="/untyping/category/kahu/">Kahu</a>
                    </li>
                    <li class="cat-item cat-item-4">
                      <a href="/untyping/category/myna/">Myna</a>
                    </li>
                    <li class="cat-item cat-item-13">
                      <a href="/untyping/category/racket/">Racket</a>
                    </li>
                    <li class="cat-item cat-item-8">
                      <a href="/untyping/category/scala/">Scala</a>
                    </li>
                    <li class="cat-item cat-item-5">
                      <a href="/untyping/category/web-development/"
                        >Web development</a
                      >
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <Footer />

    <script
      src="http://www.google-analytics.com/urchin.js"
      type="text/javascript"></script>
    <script type="text/javascript">
      _uacct = "UA-183641-1";
      urchinTracker();
    </script>
    <script is:inline src="//code.jquery.com/jquery-1.8.0.min.js"></script>
    <script is:inline src="/scripts/untyped.js"></script>
  </body>
</html>
