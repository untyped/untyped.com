---
import Footer from "@components/Footer.astro";
---

<!doctype html>
<html id="untyping" lang="en">
  <head>
    <title>November - 2007 - Untyping</title>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link rel="stylesheet" type="text/css" href="/styles/screen.css" />


    </style>

  </head>

  <body class="myna" data-goal="load">
    <header id="top">
      <div class="container">
        <div class="row">
          <div class="span5 offset7">
            <div class="overlay title">
              <a href="/untyping">
                <h1>
                  <img src="/styles/images/untyping-logo.png" alt="Untyping" />
                </h1>
                <span class="strapline">The Untyped Weblog.</span>
              </a>
            </div>

            <div class="overlay about">
              Read on or <a href="/">return home.</a>
            </div>
          </div>
        </div>
      </div>

      <div class="shadow bottom"></div>
    </header>

    <div id="navbar-wrapper">
      <nav id="navbar" class="navbar">
        <div class="navbar-inner">
          <div class="container">
            <ul class="nav">
              <li><a href="/#top">Home</a></li>
              <li><a href="/untyping">Weblog</a></li>
              <li><a href="#contact">Contact</a></li>
            </ul>
          </div>
        </div>
      </nav>
    </div>

    <div class="shadow-wrapper">
      <div class="shadow top light"></div>

      <div class="container">
        <h1 class="pagetitle">Archive for November, 2007</h1>

        <div class="row">
          <div id="blog" class="span10">
            <section
              id="post-163"
              class="post-163 post type-post status-publish format-standard hentry category-web-development"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">23 Nov 2007</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2007/11/23/custom-dispatchers-in-the-plt-scheme-web-server/"
                      rel="bookmark"
                      title="Permanent Link to Custom Dispatchers in the PLT Scheme Web Server"
                      >Custom Dispatchers in the PLT Scheme Web Server</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      We’ve just released &lt;a<br />
                      href=&#8221;http://planet.plt-scheme.org/display.ss?package=instaweb.plt&amp;owner=schematics&#8221;&gt;Instaweb<br
                      />
                      2.0. Instaweb is our utility that takes care of setting<br
                      />
                      up the PLT web-server and running servlets. If you have a<br
                      />
                      servlet in a file called <code>servlet.ss</code> with<br
                      />
                      Instaweb you just need to write the following lines to get<br
                      />
                      it running:
                    </p>
                    <pre
                      is:raw>
(require (planet "instaweb.ss" ("schematics" "instaweb.plt" 2)))
(instaweb)</pre>
                    <p>
                      The new version of Instaweb includes many new options and<br
                      />
                      works in a slightly different way to the 1.0 branch. To my<br
                      />
                      mind the best new feature is that Instaweb now configures<br
                      />
                      the web-server to pass to the servlet <em>all</em
                      > requests<br />
                      that don’t match a file in the <code>htdocs</code><br />
                      directory. This means your servlet no longer has to live<br
                      />
                      under a URL starting with <code>/servlets</code>. You can<br
                      />
                      &lt;a<br />
                      href=&#8221;http://planet.plt-scheme.org/package-source/schematics/instaweb.plt/2/1/doc.txt&#8221;&gt;read<br
                      />
                      the documentation to get the full details of what’s new.<br
                      />
                      What I want to talk about here is how we implelemented this,<br
                      />
                      as it illustrates some very nice features of the web-server<br
                      />
                      that aren’t well known.
                    </p>
                    <p>
                      In the web-server’s terminology a dispatcher is a<br />
                      function that may generate a response given a request.<br
                      />
                      Examples includes the filesystem dispatcher, which responds<br
                      />
                      to requests with the contents of a file, and the servlet<br
                      />
                      dispatcher, which invokes a servlet. Dispatchers are<br />
                      arranged in a list. The first dispatcher in the list<br />
                      inspects the request and, if it decides the request is<br
                      />
                      relevant, generates a response. Otherwise control is passed<br
                      />
                      to the next dispatcher in the list. For some time now the<br
                      />
                      web-server has had a configurable dispatcher pipeline, which<br
                      />
                      can be set by simply passing a value with the<br />
                      <code>#:dispatch</code> keyword to the <code>serve</code
                      ><br />
                      function.
                    </p>
                    <p>
                      The web-server provides a number of dispatchers, all in<br
                      />
                      the <code
                        >&lt;a<br />
                        href="http://svn.plt-scheme.org/plt/trunk/collects/web-server/dispatchers/"&gt;dispatchers</code
                      ><br />
                      subdirectory of the <code>web-server</code> collection.<br
                      />
                      They all provide a <code>make</code> function that does
                      most<br />
                      of the work. Here’s how to use the file, servlet, and<br
                      />
                      sequence dispatchers, the most generally useful ones:
                    </p>
                    <ol>
                      <li>
                        The file dispatcher, in<br />
                        <code>dispatch-files.ss</code>, takes a single
                        parameter, a<br />
                        function that converts a URL to a path (and another value<br
                        />
                        that the dispatcher ignores). The path can name a file,<br
                        />
                        which the dispatcher will serve if such a file actually<br
                        />
                        exists, or it can name a directory, in which case the<br
                        />
                        dispatcher will look for a file within that directory called<br
                        />
                        <code>index.html</code> or <code>index.htm</code>.
                        <p>
                          To use the file dispatcher you will probably want the<br
                          />
                          handy <code>make-url-&gt;path</code> function in<br />
                          <code>filesystem-map.ss</code>. Pass this function a
                          base<br />
                          path (the directory where your files live), and it will<br
                          />
                          return a function suitable to pass to the file<br />
                          dispatcher.
                        </p>
                        <p>Here’s an example of use:</p>
                        <pre
                          is:raw>
(require
(prefix file: (lib "dispatch-files.ss" "web-server" "dispatchers"))
(lib "filesystem-map.ss" "web-server" "dispatchers"))

(define base-path (string-&gt;path "/my/directory/of/files"))

;; htdocs-url-&gt;path : path -&gt; (url -&gt; path (list-of path-element))
(define (htdocs-url-&gt;path path)
(make-url-&gt;path (path-&gt;complete-path path)))

;; dispatch-htdocs : (connection request -&gt; response)
(define dispatch-htdocs
(file:make #:url-&gt;path (htdocs-url-&gt;path base-path)))</pre>
                      </li>
                      <li>
                        The servlet dispatcher, in <code
                          >dispatch-servlets.ss</code
                        > is a bit more difficult to use as you need a function
                        from the <code>private</code>subcollection of the
                        web-server, suggesting the code reorganisation isn’t
                        quite finished. The <code>make</code> function takes two
                        arguments, the first being a <code>cache-table</code>,
                        and the second being a function that, like for the file
                        dispatcher, maps URLs to paths. To construct a <code
                          >cache-table</code
                        > use the following lines of code:
                        <pre
                          is:raw>
(require
(lib "cache-table.ss" "web-server" "private"))

(define cache-table (box (make-cache-table)))</pre>
                        <p>
                          If you want all URLs to go a particular servlet, as in
                          Instaweb, the URL to path function just needs to
                          return the path of the servlet. The function used in
                          Instaweb is this:
                        </p>
                        <pre
                          is:raw>
;; serlvet-url-&gt;path : url -&gt; path (list-of path-element)
(define (servlet-url-&gt;path url)
(let ([complete-servlet-path (path-&gt;complete-path servlet-path)])
(values complete-servlet-path (explode-path* complete-servlet-path))))</pre>
                        <p>Now we can create a dispatcher as follows:</p>
                        <pre
                          is:raw>
;; clear-servlet-cache! : -&gt; void
;; dispatch-servlets:    connection request -&gt; response
(define-values (clear-servlet-cache! dispatch-servlets)
(servlet:make (box (make-cache-table))
#:url-&gt;path servlet-url-&gt;path))</pre>
                      </li>
                      <li>
                        The sequencer dispatcher couldn’t be easier to use. It
                        just takes any numbe of dispatchers and creates new
                        dispatcher that tries them in sequence. For example:
                        <pre
                          is:raw>
;; dispatch-all : connection request -&gt; response
(define dispatch-all
(sequencer:make dispatch-htdocs
dispatch-servlets))</pre>
                      </li>
                    </ol>
                    <p>
                      With the above you should be able to create your own
                      custom dispatchers. If you have problems just read the
                      (very short) Instaweb code!
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a
                      href="/untyping/category/web-development/"
                      rel="category tag">Web development</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Custom Dispatchers in the PLT Scheme Web Server</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <nav>
              <div class="row">
                <div class="span8 offset2">
                  <span class="newer"></span>
                  <span class="older"></span>
                  <div class="clear"></div>
                </div>
              </div>
            </nav>
          </div>
          <div class="span2">
            <div id="sidebar" class="small column two-of-two width300">
              <ul>
                <li id="recent-posts-2" class="widget widget_recent_entries">
                  <h2 class="widgettitle">Recent Posts</h2>
                  <ul>
                    <li>
                      <a
                        href="/untyping/2013/08/07/writing-documentation-using-grunt-and-jekyll/"
                        >Writing Documentation using Grunt and Jekyll</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/10/19/meanwhile-at-untyped-hq/"
                        >Meanwhile, at Untyped HQ&#8230;</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/08/28/new-site/">New site</a>
                    </li>
                    <li>
                      <a
                        href="/untyping/2012/06/06/myna-for-wordpress-available-now/"
                        >Myna for WordPress available now!</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2011/10/20/the-circus-is-in-town/"
                        >The Circus is in Town</a
                      >
                    </li>
                  </ul>
                </li>
                <li
                  id="recent-comments-2"
                  class="widget widget_recent_comments"
                >
                  <h2 class="widgettitle">Recent Comments</h2>
                  <ul id="recentcomments"></ul>
                </li>
                <li id="archives-2" class="widget widget_archive">
                  <h2 class="widgettitle">Archives</h2>
                  <ul>
                    <li><a href="/untyping/2013/08/">August 2013</a></li>
                    <li><a href="/untyping/2012/10/">October 2012</a></li>
                    <li><a href="/untyping/2012/08/">August 2012</a></li>
                    <li><a href="/untyping/2012/06/">June 2012</a></li>
                    <li><a href="/untyping/2011/10/">October 2011</a></li>
                    <li><a href="/untyping/2011/09/">September 2011</a></li>
                    <li><a href="/untyping/2011/08/">August 2011</a></li>
                    <li><a href="/untyping/2011/05/">May 2011</a></li>
                    <li><a href="/untyping/2011/03/">March 2011</a></li>
                    <li><a href="/untyping/2011/02/">February 2011</a></li>
                    <li><a href="/untyping/2011/01/">January 2011</a></li>
                    <li><a href="/untyping/2010/12/">December 2010</a></li>
                    <li><a href="/untyping/2010/11/">November 2010</a></li>
                    <li><a href="/untyping/2010/10/">October 2010</a></li>
                    <li><a href="/untyping/2010/07/">July 2010</a></li>
                    <li><a href="/untyping/2010/06/">June 2010</a></li>
                    <li><a href="/untyping/2010/05/">May 2010</a></li>
                    <li><a href="/untyping/2010/04/">April 2010</a></li>
                    <li><a href="/untyping/2010/03/">March 2010</a></li>
                    <li><a href="/untyping/2010/02/">February 2010</a></li>
                    <li><a href="/untyping/2010/01/">January 2010</a></li>
                    <li><a href="/untyping/2009/07/">July 2009</a></li>
                    <li><a href="/untyping/2009/06/">June 2009</a></li>
                    <li><a href="/untyping/2009/04/">April 2009</a></li>
                    <li><a href="/untyping/2009/03/">March 2009</a></li>
                    <li><a href="/untyping/2009/01/">January 2009</a></li>
                    <li><a href="/untyping/2008/11/">November 2008</a></li>
                    <li><a href="/untyping/2008/10/">October 2008</a></li>
                    <li><a href="/untyping/2008/09/">September 2008</a></li>
                    <li><a href="/untyping/2008/08/">August 2008</a></li>
                    <li><a href="/untyping/2008/07/">July 2008</a></li>
                    <li><a href="/untyping/2008/06/">June 2008</a></li>
                    <li><a href="/untyping/2008/05/">May 2008</a></li>
                    <li><a href="/untyping/2008/04/">April 2008</a></li>
                    <li><a href="/untyping/2008/03/">March 2008</a></li>
                    <li><a href="/untyping/2008/02/">February 2008</a></li>
                    <li><a href="/untyping/2008/01/">January 2008</a></li>
                    <li><a href="/untyping/2007/12/">December 2007</a></li>
                    <li>
                      <a href="/untyping/2007/11/" aria-current="page"
                        >November 2007</a
                      >
                    </li>
                    <li><a href="/untyping/2007/10/">October 2007</a></li>
                    <li><a href="/untyping/2007/09/">September 2007</a></li>
                    <li><a href="/untyping/2007/08/">August 2007</a></li>
                    <li><a href="/untyping/2007/07/">July 2007</a></li>
                    <li><a href="/untyping/2007/06/">June 2007</a></li>
                    <li><a href="/untyping/2007/05/">May 2007</a></li>
                    <li><a href="/untyping/2007/04/">April 2007</a></li>
                    <li><a href="/untyping/2007/03/">March 2007</a></li>
                    <li><a href="/untyping/2007/02/">February 2007</a></li>
                    <li><a href="/untyping/2007/01/">January 2007</a></li>
                    <li><a href="/untyping/2006/12/">December 2006</a></li>
                    <li><a href="/untyping/2006/11/">November 2006</a></li>
                    <li><a href="/untyping/2006/10/">October 2006</a></li>
                    <li><a href="/untyping/2006/09/">September 2006</a></li>
                    <li><a href="/untyping/2006/08/">August 2006</a></li>
                    <li><a href="/untyping/2006/07/">July 2006</a></li>
                    <li><a href="/untyping/2006/06/">June 2006</a></li>
                    <li><a href="/untyping/2006/05/">May 2006</a></li>
                    <li><a href="/untyping/2006/04/">April 2006</a></li>
                    <li><a href="/untyping/2006/03/">March 2006</a></li>
                    <li><a href="/untyping/2006/02/">February 2006</a></li>
                    <li><a href="/untyping/2006/01/">January 2006</a></li>
                    <li><a href="/untyping/2005/12/">December 2005</a></li>
                    <li><a href="/untyping/2005/11/">November 2005</a></li>
                    <li><a href="/untyping/2005/10/">October 2005</a></li>
                    <li><a href="/untyping/2005/09/">September 2005</a></li>
                    <li><a href="/untyping/2005/08/">August 2005</a></li>
                    <li><a href="/untyping/2005/07/">July 2005</a></li>
                    <li><a href="/untyping/2005/06/">June 2005</a></li>
                    <li><a href="/untyping/2005/05/">May 2005</a></li>
                    <li><a href="/untyping/2005/04/">April 2005</a></li>
                  </ul>
                </li>
                <li id="categories-2" class="widget widget_categories">
                  <h2 class="widgettitle">Categories</h2>
                  <ul>
                    <li class="cat-item cat-item-10">
                      <a href="/untyping/category/business/">Business</a>
                    </li>
                    <li class="cat-item cat-item-7">
                      <a href="/untyping/category/code/">Code</a>
                    </li>
                    <li class="cat-item cat-item-11">
                      <a href="/untyping/category/design/">Design</a>
                    </li>
                    <li class="cat-item cat-item-3">
                      <a href="/untyping/category/front-page/">Front page</a>
                    </li>
                    <li class="cat-item cat-item-9">
                      <a href="/untyping/category/fun/">Fun</a>
                    </li>
                    <li class="cat-item cat-item-6">
                      <a href="/untyping/category/functional-programming/"
                        >Functional Programming</a
                      >
                    </li>
                    <li class="cat-item cat-item-1">
                      <a href="/untyping/category/general/">General</a>
                    </li>
                    <li class="cat-item cat-item-12">
                      <a href="/untyping/category/javascript/">Javascript</a>
                    </li>
                    <li class="cat-item cat-item-14">
                      <a href="/untyping/category/kahu/">Kahu</a>
                    </li>
                    <li class="cat-item cat-item-4">
                      <a href="/untyping/category/myna/">Myna</a>
                    </li>
                    <li class="cat-item cat-item-13">
                      <a href="/untyping/category/racket/">Racket</a>
                    </li>
                    <li class="cat-item cat-item-8">
                      <a href="/untyping/category/scala/">Scala</a>
                    </li>
                    <li class="cat-item cat-item-5">
                      <a href="/untyping/category/web-development/"
                        >Web development</a
                      >
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <Footer />
    <script
      src="http://www.google-analytics.com/urchin.js"
      type="text/javascript"></script>
    <script type="text/javascript">
      _uacct = "UA-183641-1";
      urchinTracker();
    </script>
    <script is:inline src="//code.jquery.com/jquery-1.8.0.min.js"></script>
    <script is:inline src="/scripts/untyped.js"></script>
  </body>
</html>
