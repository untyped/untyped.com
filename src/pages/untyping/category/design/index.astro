---
import Footer from "@components/Footer.astro";
---

<!doctype html>
<html id="untyping" lang="en">
  <head>
    <title>Design - Untyping</title>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link rel="stylesheet" type="text/css" href="/styles/screen.css" />
  </head>

  <body class="myna" data-goal="load">
    <header id="top">
      <div class="container">
        <div class="row">
          <div class="span5 offset7">
            <div class="overlay title">
              <a href="/untyping">
                <h1>
                  <img src="/styles/images/untyping-logo.png" alt="Untyping" />
                </h1>
                <span class="strapline">The Untyped Weblog.</span>
              </a>
            </div>

            <div class="overlay about">
              Read on or <a href="/">return home.</a>
            </div>
          </div>
        </div>
      </div>

      <div class="shadow bottom"></div>
    </header>

    <div id="navbar-wrapper">
      <nav id="navbar" class="navbar">
        <div class="navbar-inner">
          <div class="container">
            <ul class="nav">
              <li><a href="/#top">Home</a></li>
              <li><a href="/untyping">Weblog</a></li>
              <li><a href="#contact">Contact</a></li>
            </ul>
          </div>
        </div>
      </nav>
    </div>

    <div class="shadow-wrapper">
      <div class="shadow top light"></div>

      <div class="container">
        <h1 class="pagetitle">Posts in the &#8216;Design&#8217; category</h1>

        <div class="row">
          <div id="blog" class="span10">
            <section
              id="post-23"
              class="post-23 post type-post status-publish format-standard hentry category-business category-code category-design category-functional-programming category-scala"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">23 May 2011</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2011/05/23/the-future-of-voip-phone-configuration-interfaces/"
                      rel="bookmark"
                      title="Permanent Link to The Future of VoIP Phone Configuration Interfaces"
                      >The Future of VoIP Phone Configuration Interfaces</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      We’ve recently completed a very fun and interesting job
                      working on a new interface for managing <a
                        href="http://en.wikipedia.org/wiki/Voice_over_IP"
                        >VoIP</a
                      > phone systems. We have a VoIP phone, provided by <a
                        href="http://loho.co.uk/">Loho</a
                      >, who were also our client for this project. It’s great —
                      we can forward calls to our mobiles, cart the phone around
                      with us (plug it into a network connections and it just
                      works), and it even emails us our voice messages. The only
                      thing not great about our phone is the configuration
                      interface. Luckily, that’s what this project set out to
                      solve.
                    </p>
                    <p>
                      The brief was to implement an elegant online phone
                      configuration system. Alex, Director at Loho, provided the
                      vision. We provided two weeks of development time, which
                      was enough to create a working prototype. Alex has asked
                      us to not give away too many details about the system, but
                      I can show you a few screenshots. First up, here’s the
                      main screen:
                    </p>
                    <p>
                      <a
                        href="http://untyped.wpengine.com/wp-content/uploads/2011/05/loho-main-menu-sml.png"
                        ><img
                          fetchpriority="high"
                          decoding="async"
                          title="loho-main-menu-sml"
                          src="http://untyped.wpengine.com/wp-content/uploads/2011/05/loho-main-menu-sml.png"
                          alt="The very stylish main menu of the VoIP administration tool we've built for Loho."
                          width="420"
                          height="197"
                        /></a
                      >
                    </p>
                    <p>
                      The very stylish main menu of the VoIP administration tool
                      we&#8217;ve built for Loho.
                    </p>
                    <p>
                      Doesn’t give away much, does it? A bit more interesting is
                      a detail of editing a configuration:
                    </p>
                    <p>
                      <a
                        href="http://untyped.wpengine.com/wp-content/uploads/2011/05/loho-editor-sml.png"
                        ><img
                          decoding="async"
                          title="loho-editor-sml"
                          src="http://untyped.wpengine.com/wp-content/uploads/2011/05/loho-editor-sml.png"
                          alt="Also very stylish: editing the configuration of a voice menu"
                          width="420"
                          height="366"
                        /></a
                      >
                    </p>
                    <p>
                      Also very stylish: editing the configuration of a voice
                      menu
                    </p>
                    <p>
                      Here I’m editing a voice menu — one of those “Press 1 if
                      you’re interested in giving us all your money” type
                      things.
                    </p>
                    <p>
                      We think we’ve created a very nice system. Loho tell us
                      they were overwhelmed with interest at a recent tradefair,
                      suggesting we’re not alone in our opinion. While the
                      interface is an important aspect of the work, the backend
                      (which I can talk about!) is just as important. The main
                      task was defining a data model to capture the rich feature
                      set that Loho provide. This turned out to be very similar
                      to designing a programming language and its intermediate
                      representation. For example, we use a <a
                        href="http://en.wikipedia.org/wiki/Continuation-passing_style"
                        >continuation-passing style</a
                      > representation to avoid maintaining a stack on the
                      server side. Our representation distinguishes between tail
                      calls and normal function calls to avoid excessive
                      resource consumption on the VoIP side. Relational
                      databases don’t do a very good job of storing recursive
                      datastructures, like the <a
                        href="http://en.wikipedia.org/wiki/Abstract_syntax_tree"
                        >AST</a
                      > of a programming language, so we used Mongo for the data
                      store. In addition to its flexible data model, <a
                        href="http://www.youtube.com/watch?v=b2F-DItXtZs"
                        >Mongo is web scale</a
                      > which has given us an immediate status boost at local
                      programmer meetups.
                    </p>
                    <p>
                      The backend code is implemented in Scala and Lift. There
                      are actually two interfaces to the service. One is the
                      nice interface the users see, and the other is a REST
                      interface that is called by the Asterisk AGI scripts that
                      implement the VoIP functionality. The Asterisk system
                      doesn’t handle all the functionality we represent
                      internally, so the REST interface includes a small
                      interpreter that executes intermediate steps till we
                      arrive at something Asterisk deals with.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/business/" rel="category tag"
                      >Business</a
                    >,
                    <a href="/untyping/category/code/" rel="category tag"
                      >Code</a
                    >,
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >,
                    <a
                      href="/untyping/category/functional-programming/"
                      rel="category tag">Functional Programming</a
                    >,
                    <a href="/untyping/category/scala/" rel="category tag"
                      >Scala</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on The Future of VoIP Phone Configuration Interfaces</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-34"
              class="post-34 post type-post status-publish format-standard hentry category-business category-code category-design category-front-page category-general category-myna category-web-development"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">11 Feb 2011</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2011/02/11/stop-ab-testing-and-make-out-like-a-bandit/"
                      rel="bookmark"
                      title="Permanent Link to Stop A/B Testing and Make Out Like a Bandit"
                      >Stop A/B Testing and Make Out Like a Bandit</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      <strong
                        >This is the blog post that led to <a
                          href="https://mynaweb.com/?utm_source=untyping&utm_medium=post&utm_campaign=myna"
                          >Myna</a
                        >. Sign up now and help us beta test the world’s fastest
                        A/B testing product!</strong
                      >
                    </p>
                    <p>
                      Were I a betting man, I would wager this: the supermarket
                      nearest to you is laid out with fresh fruit and vegetables
                      near the entrance, and dairy and bread towards the back of
                      the shop. I’m quite certain I’d win this bet enough times
                      to make it worthwhile. This layout is, of course, no
                      accident. By placing essentials in the corners, the store
                      forces shoppers to traverse the entire floor to get their
                      weekly shop. This increases the chance of an impulse
                      purchase and hence the store’s revenue.
                    </p>
                    <p>
                      I don’t know who developed this layout, but at some point
                      someone must have tested it and it obviously worked. The
                      same idea applies online, where it is incredibly easy to
                      change the “layout” of a store. Where the supermarket
                      might shuffle around displays or change the lighting, the
                      online retailer might change the navigational structure or
                      wording of their landing page. I call this process <em
                        >content optimisation</em
                      >.
                    </p>
                    <p>
                      Any prospective change should be tested to ensure it has a
                      positive effect on revenue (or some other measure, such as
                      clickthroughs). The industry standard method for doing
                      this is <a
                        href="http://untyped.wpengine.com/2010/07/22/epistemology-and-ab-testing/"
                        >A/B testing</a
                      >. However, it is well known in the academic community
                      that <em>A/B testing is significantly suboptimal</em>. In
                      this post I’m going to explain why, and how you can do
                      better.
                    </p>
                    <p>There are several problems with A/B testing:</p>
                    <ul>
                      <li>
                        A/B testing is suboptimal. It simply doesn’t increase
                        revenue as much as better methods.
                      </li>
                      <li>
                        A/B testing is inflexible. You can’t, for example, add a
                        new choice to an already running test.
                      </li>
                      <li>
                        A/B testing has a tedious workflow. To do it correctly,
                        you have to make lots of seemingly arbitrary choices
                        (p-value, experiment size) to run an experiment.
                      </li>
                    </ul>
                    <p>
                      The methods I’m going to describe, which are known as <a
                        href="http://en.wikipedia.org/wiki/Multi-armed_bandit"
                        >bandit algorithms</a
                      >, solve all these problems. But first, let’s look at the
                      problems of A/B testing in more detail.
                    </p>
                    <h2>Suboptimal Performance</h2>
                    <p>
                      Explaining the suboptimal performance of A/B testing is
                      tricky without getting into a bit of statistics. Instead
                      of doing that, I’m going to describe the essence of the
                      problem in a (hopefully) intuitive way. Let’s start by
                      outlining the basic A/B testing scenario, so there is no
                      confusion. In the simplest situation are two choices, A
                      and B, under test. Normally one of them is already running
                      on the site (let’s call that one A), and the other (B) is
                      what we’re considering replacing A with. We run an
                      experiment and then look for a significant difference,
                      where I mean <a
                        href="http://en.wikipedia.org/wiki/Statistical_significance"
                        >significance</a
                      > in the statistical sense. If B is significantly better
                      we replace A with B, otherwise we keep A on the site.
                    </p>
                    <p>
                      The key problem with A/B testing is it doesn’t respect
                      what the significance test is actually saying. When a test
                      shows B is significantly better than A, it is right to
                      throw out A. However, when there is no significant
                      difference the test is <em>not</em> saying that B is no
                      better than A, but rather that the data does not support
                      any conclusion. A might be better than B, B might be
                      better than A, or they might be the same. We just can’t
                      tell with the data that is available*. It might seem we
                      could just run the test until a significant result
                      appears, but that runs into the problem of <a
                        href="http://www.evanmiller.org/how-not-to-run-an-ab-test.html"
                        >repeated significance testing errors</a
                      >. Oh dear! Whatever we do, if we stick exclusively with
                      A/B testing we’re going to make mistakes, and probably
                      more than we realise.
                    </p>
                    <p>
                      A/B testing is also suboptimal in another way — it doesn’t
                      take advantage of information gained during the trial.
                      Every time you display a choice you get information, such
                      as a click, a purchase, or an indifferent user leaving
                      your site. This information is really valuable, and you
                      could make use of it in your test, but A/B testing simply
                      discards it. There are good statistical reasons to not use
                      information gained during a trial within the A/B testing
                      framework, but if we step outside that framework we can.
                    </p>
                    <p>
                      * Technically, the reason for this is that the probability
                      of a type II error increases as the probability of a type
                      I error decreases. We control the probability of a type I
                      error with the p-value, and this is typically set low. So
                      if we drop option B when the test is not significant we
                      have a high probability of making a type II error.
                    </p>
                    <h2>Inflexible</h2>
                    <p>
                      The A/B testing setup is very rigid. You can’t add new
                      choices to the test, so you can’t, say, test the best news
                      item to display on the front page of a site. You can’t
                      dynamically adjust what you display based on information
                      you have about the user — say, what they purchased last
                      time they visited. You also can’t easily test more than
                      two choices.
                    </p>
                    <h2>Workflow</h2>
                    <p>
                      To setup an A/B experiment you need to choose the
                      significance level and the number of trials. These choices
                      are often arbitrary, but they can have a major impact on
                      results. You then need to monitor the experiment and, when
                      it concludes, implement the results. There are a lot of
                      manual steps in this workflow.
                    </p>
                    <h2>Make out like a Bandit</h2>
                    <p>
                      Algorithms for solving the so-called bandit problem
                      address all the problems with A/B testing. To summarise,
                      they give optimal results (to within constant factors),
                      they are very flexible, and they have a fire-and-forget
                      workflow.
                    </p>
                    <p>
                      So, what is the bandit problem? You have a set of choices
                      you can make. On the web these could be different images
                      to display, or different wordings for a button, and so on.
                      Each time you make a choice you get a reward. For example,
                      you might get a reward of 1 if a button is clicked, and
                      reward of 0 otherwise. Your goal is to maximise your total
                      reward over time. This clearly fits the content
                      optimisation problem.
                    </p>
                    <p>
                      The bandit problem has been studied for over 50 years, but
                      only in the last ten years have practical algorithms been
                      developed. We studied one such <a
                        href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.98.9211&rep=rep1&type=pdf"
                        >paper</a
                      > in <a
                        href="http://untyped.wpengine.com/2011/01/10/the-university-of-untyped/"
                        >UU</a
                      >. The particular details of the algorithm we studied are
                      not important (if you are interested, read the paper –
                      it’s very simple); here I want to focus on the general
                      principles of bandit algorithms.
                    </p>
                    <p>
                      The first point is that the bandit problem explicitly
                      includes the idea that we make use of information as it
                      arrives. This leads to what is called the
                      exploration-exploitation dilemma: do we try many different
                      choices to gain a better estimate of their reward
                      (exploration) or try the choices that have worked well in
                      the past (exploitation)?
                    </p>
                    <p>
                      The performance of an algorithm is typically measured by
                      its <a
                        href="http://en.wikipedia.org/wiki/Regret_(decision_theory)"
                        >regret</a
                      >, which is the average difference between its actual
                      performance and the best possible performance. <a
                        href="http://dx.doi.org/10.1016/0196-8858(85)90002-8"
                        >It has been shown</a
                      > that the best possible regret increases logarithmically
                      with the number of choices made, and <em
                        >modern bandit algorithms are optimal</em
                      > (see <a
                        href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.98.9211&rep=rep1&type=pdf"
                        >the UU paper</a
                      >, for instance).
                    </p>
                    <p>
                      Bandit algorithms are very flexible. They can deal with as
                      many choices as necessary. Variants of the basic
                      algorithms can handle addition and removal of choices,
                      selection of the best <em>k</em> choices, and exploitation
                      of information known about the visitor.
                    </p>
                    <p>
                      Bandits are also simple to use. Many of the algorithms
                      have no parameters to set, and unlike A/B testing there is
                      no need to monitor them — they will continue working
                      indefinitely.
                    </p>
                    <p>
                      Finally, we know bandits work on the web, as much of the
                      current research on them is coming out of <a
                        href="http://www.cs.toronto.edu/~tl/papers/context-aistats.pdf"
                        >Google</a
                      >, <a
                        href="http://research.microsoft.com/en-us/projects/bandits/"
                        >Microsoft</a
                      >, <a
                        href="http://labs.yahoo.com/files/Explore-exploit-ICDM09.pdf"
                        >Yahoo!</a
                      >, and other big Internet companies.
                    </p>
                    <p>
                      So there you have it. Stop wasting time on A/B testing and
                      make out like a bandit!
                    </p>
                    <h2>Join Our Merry Band</h2>
                    <p>
                      Finally, you probably won’t be surprised to hear we are
                      developing a content optimisation system based on bandit
                      algorithms. I am giving a talk on this at the Multipack
                      Show and Tell in Birmingham this Saturday.
                    </p>
                    <p>
                      We are currently building a prototype, and are looking for
                      people to help us evaluate it. If you want more
                      information, or would like to get involved, <a
                        href="mailto:info@untyped.com">get in touch</a
                      > and we’ll let you know when we’re ready to go.
                    </p>
                    <p>
                      <strong
                        >Update: In case you missed it at the top, <a
                          href="http://www.mynaweb.com/">Myna</a
                        > is our content optimisation system based on bandit
                        algorithms and we’re accepting beta users right now!</strong
                      >
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/business/" rel="category tag"
                      >Business</a
                    >,
                    <a href="/untyping/category/code/" rel="category tag"
                      >Code</a
                    >,
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >,
                    <a href="/untyping/category/front-page/" rel="category tag"
                      >Front page</a
                    >,
                    <a href="/untyping/category/general/" rel="category tag"
                      >General</a
                    >,
                    <a href="/untyping/category/myna/" rel="category tag"
                      >Myna</a
                    >,
                    <a
                      href="/untyping/category/web-development/"
                      rel="category tag">Web development</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Stop A/B Testing and Make Out Like a Bandit</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-66"
              class="post-66 post type-post status-publish format-standard hentry category-design category-fun"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">6 May 2010</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2010/05/06/covering-the-election/"
                      rel="bookmark"
                      title="Permanent Link to Covering the Election"
                      >Covering the Election</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      Today is the closest and most interesting general election
                      in the UK that I can remember. This blog isn’t the place
                      to talk politics, but while reading the manifestos of the
                      three major parties I was struck by their design, and
                      particularly the design of their covers, and I’m going to
                      share some thoughts today on this topic. I think it’s
                      interesting to look at the message the each party is
                      trying to convey with their design and in particular how
                      they all, for me, got it wrong. In alphabetical order,
                      here they are:
                    </p>
                    <h2>The Conservatives</h2>
                    <div>
                      <a
                        href="http://www.untyped.com/untyping/wp-content/uploads/2010/05/tory-manifesto-sml.png"
                        ><img
                          decoding="async"
                          title="The Tory manifesto"
                          src="http://www.untyped.com/untyping/wp-content/uploads/2010/05/tory-manifesto-sml.png"
                          alt=""
                          width="200"
                          height="284"
                        /></a
                      >
                    </div>
                    <p>
                      Gold lettering on a blue cloth binding. I knew I’d seen
                      this before but it took a while before I remembered where:
                      my parent’s old textbooks, which I used to leaf through as
                      a child, had this kind of binding beneath their dust
                      jackets. I looked through all my and my wife’s textbooks
                      and didn’t find any the same. Add in the stuffy
                      “Invitation” and to me this says <em>old</em>. Very
                      traditional, very establishment, and very much at odds
                      with the image of David Cameron, with no tie and top
                      button undone, presented in the Tory advertising.
                    </p>
                    <h2>Labour</h2>
                    <div>
                      <a
                        href="http://www.untyped.com/untyping/wp-content/uploads/2010/05/labour-manifesto-sml.png"
                        ><img
                          loading="lazy"
                          decoding="async"
                          title="The Labour Manifesto"
                          src="http://www.untyped.com/untyping/wp-content/uploads/2010/05/labour-manifesto-sml.png"
                          alt=""
                          width="200"
                          height="283"
                        /></a
                      >
                    </div>
                    <p>
                      This is not a subtle cover. The illustration benefits from
                      the fact the UK is a small country and most places look
                      more or the less the same, so the patchwork fields will
                      look like “home” to almost everyone. I’m a bit surprised
                      the couple looks so white; I’d expect Labour to embrace
                      diversity a bit more. However the whole feel of the cover
                      is quite retro. The style of illustration and the rural
                      setting (the UK is very urbanised) both seem to looking
                      backward to me. I like the alliteration in the text. That
                      blazing hot sun disturbs me; it looks more like a nuke
                      going off than the gentle British sun I’m used to.
                    </p>
                    <h2>Liberal Democrats</h2>
                    <div>
                      <a
                        href="http://www.untyped.com/untyping/wp-content/uploads/2010/05/lib-dem-manifesto-sml.png"
                        ><img
                          loading="lazy"
                          decoding="async"
                          title="The Liberal Democrats Manifesto"
                          src="http://www.untyped.com/untyping/wp-content/uploads/2010/05/lib-dem-manifesto-sml.png"
                          alt=""
                          width="200"
                          height="284"
                        /></a
                      >
                    </div>
                    <p>
                      It’s hard to say much about this cover, as it doesn’t say
                      much to me. The repetition of “fair” is effective, and
                      this is continued inside. The colours are washed out. This
                      cover doesn’t really inspire any emotion in me; it looks
                      more like an annual report than a manifesto!
                    </p>
                    <p>
                      Of the three I like the Labour cover the most, but as
                      you’ve seen none of them really worked for me. This isn’t
                      too surprising; major political parties must paint with
                      such a broad brush that they cannot really address any
                      small demographic. Now enough about the manifestos; go out
                      and vote!
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >,
                    <a href="/untyping/category/fun/" rel="category tag">Fun</a>
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Covering the Election</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-136"
              class="post-136 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">14 Mar 2008</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2008/03/14/welshs-first-corollary-to-weakliem/"
                      rel="bookmark"
                      title="Permanent Link to Welsh’s First Corollary to Weakliem"
                      >Welsh’s First Corollary to Weakliem</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      <a href="http://www.eighty-twenty.net/weblog/article/11/"
                        >Weakliem’s First Rule of Application Development</a
                      > states, roughly, that design is less important than
                      functionality. While I agree in principle I think his
                      proof is lacking in a number of places. Specifically, he
                      states: “Recall that when Google first appeared, most
                      search engines embraced the design philosophy still in
                      evidence at MSN.com: bright and noisy, yet roughly
                      equivalent in functionality. Google was positively
                      audacious in both its austerity and its function. …
                      Similarly, My employer’s website is frequently ridiculed
                      for being amateurishly designed” What I think he forgets
                      is all design, however amateurish, still conveys
                      something. Google’s (to my eyes incredibly ugly) logo said
                      “hey, we’re a bunch of geeks having some fun” which
                      exactly matches the company culture and helps attract all
                      those PhDs that Google employs. Similarly Gordon’s
                      employer’s website looks like it was designed by someone’s
                      cousin, but that is the right look for its clients. It
                      gives the website credibility with the consumers who put
                      down a large chunk of change for a holiday they can only
                      afford once a year. Good design is design that is right
                      for the target audience, which can be something very
                      different to aesthetically pleasing design.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Welsh’s First Corollary to Weakliem</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-179"
              class="post-179 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">26 Jul 2007</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2007/07/26/visual-manipulation/"
                      rel="bookmark"
                      title="Permanent Link to Visual Manipulation"
                      >Visual Manipulation</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      This post is about two different forms of visual
                      manipulation for artistic effect. Start by looking at
                      these<br />
                      <a
                        title="3d Sidewalk Art | 3d Sidewalk Chalk Drawings | 3d Sidewalk Illusions"
                        href="http://o.pticalillusions.com/3d-sidewalk-art/"
                        >pseudo-3D chalk drawings</a
                      >. The monocular vision of the camera enhances the effect
                      but I believe they would work in life if seen from the
                      right angle. There was an exhibition of pseudo-3D
                      paintings at the <a href="http://www.bmag.org.uk/"
                        >Birmingham Museum and Art Gallery</a
                      > and they worked very well — arguably better than in
                      photographs are you could actually walk around the works
                      and the effect was maintained for quite a wide viewing
                      angle.
                    </p>
                    <p>
                      Now you’re warmed up, we’re going to go into a time
                      machine <a href="http://www.loc.gov/exhibits/empire/"
                        >here</a
                      >and <a href="http://www.cs.cmu.edu/~dellaert/aligned/"
                        >here</a
                      >. I find the lack of colour in early photographs presents
                      a barrier that makes it difficult to imagine myself in the
                      scene. These colour photographs from the period 1909-1915
                      (reconstructed from red, green, and blue images using an
                      ingenious process) remove that barrier and the results are
                      striking. Some of the scenes — railways, forests, grand
                      buildings — could be contemporary, but note how few roads
                      there are, how few possessions are visible. I can relate
                      to the pictures and yet they still feel like another
                      world. Fantastic stuff.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Visual Manipulation</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-188"
              class="post-188 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">19 Jun 2007</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2007/06/19/font-rendering-fun/"
                      rel="bookmark"
                      title="Permanent Link to Font Rendering Fun"
                      >Font Rendering Fun</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      I’ve always wondered why fonts looked different on OS X
                      and Windows and thanks to <a
                        title="Coding Horror: Font Rendering: Respecting The Pixel Grid"
                        href="http://www.codinghorror.com/blog/archives/000885.html"
                        >this blog post</a
                      > I now know why. The summary is that Windows favours
                      aligning the fonts with the pixel grid, which leads to
                      clearer type but thinner blockier text. Follow the link to
                      see examples of the difference.
                    </p>
                    <p>
                      More interesting are the various font rendering techniques
                      in use. Microsoft’s <a
                        href="http://untyped.wpengine.com/2007/06/%3Cbr%20/%3Ehttp://en.wikipedia.org/wiki/ClearType"
                        >ClearType</a
                      > takes advantage of the known arrangement of pixels in
                      LCD monitors which effectively triples horizontal
                      resolution at the expensive of distorting colour. <a
                        href="http://artofcode.com/fontfocus/">FontFocus</a
                      > takes a different approach to get a better result. It
                      again focuses on aligning fonts with the pixel grid.
                      Here’s an explanation from the white paper linked above:
                    </p>
                    <blockquote>
                      <p>
                        Previous grid-fitting techniques … improve contrast by
                        aligning stems to pixel boundaries, but in doing so
                        distort individual letterforms. FontFocus leaves the
                        shapes of the glyphs completely unchanged. Instead, it
                        shifts each character left or right by a tiny subpixel
                        amount, and also subtly expands or condenses individual
                        glyphs to align all stems, if there are more than one. …
                      </p>
                      <p>
                        While the idea of subtly shifting and stretching glyphs
                        to enhance contrast is simple, the core of the of
                        FontFocus technology is how it chooses these tweaks.
                        Most existing font rendering techniques work with a
                        single glyph at a time. FontFocus optimizes the entire
                        word at a time. The results are similar to what you’d
                        get from trying each combination of subpixel offset and
                        width stretch for each glyph in the word, and picking
                        the combination with the best overall score. FontFocus
                        uses an intelligent divide-and-conquer algorithm to
                        avoid the combinatorial explosion of this brute-force
                        method.
                      </p>
                    </blockquote>
                    <p>
                      This immediately suggests a further improvement: try to
                      align a whole line of text optimally. Of course the search
                      space gets much larger so a better search method is
                      needed. If anyone is looking for a PhD this could be fun.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Font Rendering Fun</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-196"
              class="post-196 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">3 May 2007</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2007/05/03/get-it-right-or-left/"
                      rel="bookmark"
                      title="Permanent Link to Get It Right (or Left)!"
                      >Get It Right (or Left)!</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      Next time you’re walking down the street and have to step
                      aside to avoid a fellow pedestrian, note which way you
                      move. The chances are you’ll step over to the side people
                      drive on in your country. Normally this is unconscious and
                      the two of you will smoothly avoid one another as if the
                      process had been choreographed. Go to a country where
                      people drive on the other side of the road and it will
                      become immediately noticeable as you play the hilarious
                      game of stepping-in-front-of-one-another. Why do I bring
                      this up? The local branch of <a
                        href="http://www.aldi-stores.co.uk/">Aldi</a
                      >has undergone redevelopment, including a new front door.
                      You enter on the right and leave on the left. I ambled up
                      not really paying attention and of course went to the
                      wrong side. So did the next three people after me. The
                      difference between a great design and a bad design is made
                      in the little details like this.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Get It Right (or Left)!</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-216"
              class="post-216 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">6 Feb 2007</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2007/02/06/iwant-one-of-those/"
                      rel="bookmark"
                      title="Permanent Link to iWant one of those!"
                      >iWant one of those!</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      For your amusement: <a
                        title="Design Corner   OhGizmo!   The Worst of Tech: 10 From the Cult of iPod"
                        href="http://designcorner.blinkr.net/OhGizmo_/2007/02/06/The_Worst_of_Tech__10_From_the_Cult_of_iPod"
                        >The Worst of Tech: 10 From the Cult of iPod</a
                      >. I kinda like the belt, but the headphones and the
                      remote… Wow.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on iWant one of those!</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-270"
              class="post-270 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">20 Jul 2006</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2006/07/20/hiding-complexity-and-the-expert-user/"
                      rel="bookmark"
                      title="Permanent Link to Hiding Complexity and the Expert User"
                      >Hiding Complexity and the Expert User</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      37signals are developing a calendar application. Watch <a
                        href="http://www.37signals.com/svn/archives2/backpack_calendar_teaser_video.php"
                        >the demo</a
                      > and you’ll see appointments are entered as natural
                      language (for example “3pm Dentist”). <a
                        href="http://37signals.com/svn/archives2/outsourcing_choice.php"
                        >Compared to Yahoo’s calendar</a
                      > it <em>looks</em>pretty simple.
                    </p>
                    <p>
                      Think about it a bit more and you’ll realise the
                      complexity is still there, just hidden behind a different
                      interface. The GUI represents all the options graphically.
                      The text box hides the options in the murky workings of
                      the parser. 37signal’s example never shows what happens if
                      you enter text the application doesn’t understand. For
                      example, what happens if I write “Appointment with Dentist
                      at 3pm”? Done badly it will be like those early Sierra
                      games where half the challenge was discovering the words
                      the program understood. Not a lot of fun, at least when
                      you’re trying to enter your Dentist appointment rather
                      than save a princess.
                    </p>
                    <p>
                      Now if the grammar is quite restricted it should be
                      relatively easy to code up a bit of Javascript to prompt
                      the user with correct words, like most IDEs do for
                      programmers. Get this to work well and I think it will be
                      a very nice interface. GUI interfaces have a shallow
                      learning curve, but are slow to use. Textual interfaces
                      are the reverse: they favour the expert over the beginner,
                      by being fast to use but difficult to learn. Add prompting
                      to the textual interface and perhaps the end result will
                      be the best of both worlds.
                    </p>
                    <p>
                      Note that there are other ways to solve this problem. <a
                        href="http://www.cs.cornell.edu/boom/2001sp/bronevetsky/What%20is%20a%20Circle%20Menu.htm"
                        >Circle menus</a
                      >are a relatively unknown GUI device that allow faster
                      input than traditional pull-down menus. I’m sure there are
                      other innovative ideas out there. It is possible to create
                      interfaces for complex tasks that suit both the beginner
                      and expert alike.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Hiding Complexity and the Expert User</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <section
              id="post-309"
              class="post-309 post type-post status-publish format-standard hentry category-design"
            >
              <div class="row">
                <div class="span2 meta">
                  <p class="date">10 Mar 2006</p>
                  <p class="author">by Noel</p>
                </div>

                <div class="span8">
                  <h2>
                    <a
                      href="/untyping/2006/03/10/got-game/"
                      rel="bookmark"
                      title="Permanent Link to Got Game?">Got Game?</a
                    >
                  </h2>

                  <div class="entry">
                    <p>
                      Those of us who build software — we all want to build <em
                        >great</em
                      >software, right? Software that people love, not just
                      software they tolerate? I sure do.
                    </p>
                    <p>
                      This is why <a
                        title="Putting the Fun in Functional"
                        href="http://shufflebrain.com/etech06.htm"
                        >Putting the Fun in Functional</a
                      >, a presentation from Etech’06 by Amy Jo Kim, is
                      important. The central point is that the techniques that
                      game designers use to make their games enjoyable and
                      engaging can be applied to other software with the same
                      result. Check it out.
                    </p>
                  </div>

                  <p class="tags">
                    Posted in
                    <a href="/untyping/category/design/" rel="category tag"
                      >Design</a
                    >
                    |
                    <span
                      >Comments Off<span class="screen-reader-text">
                        on Got Game?</span
                      ></span
                    >
                  </p>
                </div>
              </div>
            </section>

            <nav>
              <div class="row">
                <div class="span8 offset2">
                  <span class="newer"></span>
                  <span class="older"
                    ><a href="/untyping/category/design/page/2/"
                      >Older Entries &raquo;</a
                    ></span
                  >
                  <div class="clear"></div>
                </div>
              </div>
            </nav>
          </div>
          <div class="span2">
            <div id="sidebar" class="small column two-of-two width300">
              <ul>
                <li id="recent-posts-2" class="widget widget_recent_entries">
                  <h2 class="widgettitle">Recent Posts</h2>
                  <ul>
                    <li>
                      <a
                        href="/untyping/2013/08/07/writing-documentation-using-grunt-and-jekyll/"
                        >Writing Documentation using Grunt and Jekyll</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/10/19/meanwhile-at-untyped-hq/"
                        >Meanwhile, at Untyped HQ&#8230;</a
                      >
                    </li>
                    <li>
                      <a href="/untyping/2012/08/28/new-site/">New site</a>
                    </li>
                    <li>
                      <a
                        href="/untyping/2012/06/06/myna-for-wordpress-available-now/"
                        >Myna for WordPress available now!</a
                      >
                    </li>
                    <li>
                      <a
                        href="/untyping/2011/10/20/the-circus-is-in-town/"
                        aria-current="page">The Circus is in Town</a
                      >
                    </li>
                  </ul>
                </li>
                <li
                  id="recent-comments-2"
                  class="widget widget_recent_comments"
                >
                  <h2 class="widgettitle">Recent Comments</h2>
                  <ul id="recentcomments"></ul>
                </li>
                <li id="archives-2" class="widget widget_archive">
                  <h2 class="widgettitle">Archives</h2>
                  <ul>
                    <li><a href="/untyping/2013/08/">August 2013</a></li>
                    <li><a href="/untyping/2012/10/">October 2012</a></li>
                    <li><a href="/untyping/2012/08/">August 2012</a></li>
                    <li><a href="/untyping/2012/06/">June 2012</a></li>
                    <li><a href="/untyping/2011/10/">October 2011</a></li>
                    <li><a href="/untyping/2011/09/">September 2011</a></li>
                    <li><a href="/untyping/2011/08/">August 2011</a></li>
                    <li><a href="/untyping/2011/05/">May 2011</a></li>
                    <li><a href="/untyping/2011/03/">March 2011</a></li>
                    <li><a href="/untyping/2011/02/">February 2011</a></li>
                    <li><a href="/untyping/2011/01/">January 2011</a></li>
                    <li><a href="/untyping/2010/12/">December 2010</a></li>
                    <li><a href="/untyping/2010/11/">November 2010</a></li>
                    <li><a href="/untyping/2010/10/">October 2010</a></li>
                    <li><a href="/untyping/2010/07/">July 2010</a></li>
                    <li><a href="/untyping/2010/06/">June 2010</a></li>
                    <li><a href="/untyping/2010/05/">May 2010</a></li>
                    <li><a href="/untyping/2010/04/">April 2010</a></li>
                    <li><a href="/untyping/2010/03/">March 2010</a></li>
                    <li><a href="/untyping/2010/02/">February 2010</a></li>
                    <li><a href="/untyping/2010/01/">January 2010</a></li>
                    <li><a href="/untyping/2009/07/">July 2009</a></li>
                    <li><a href="/untyping/2009/06/">June 2009</a></li>
                    <li><a href="/untyping/2009/04/">April 2009</a></li>
                    <li><a href="/untyping/2009/03/">March 2009</a></li>
                    <li><a href="/untyping/2009/01/">January 2009</a></li>
                    <li><a href="/untyping/2008/11/">November 2008</a></li>
                    <li><a href="/untyping/2008/10/">October 2008</a></li>
                    <li><a href="/untyping/2008/09/">September 2008</a></li>
                    <li><a href="/untyping/2008/08/">August 2008</a></li>
                    <li><a href="/untyping/2008/07/">July 2008</a></li>
                    <li><a href="/untyping/2008/06/">June 2008</a></li>
                    <li><a href="/untyping/2008/05/">May 2008</a></li>
                    <li><a href="/untyping/2008/04/">April 2008</a></li>
                    <li><a href="/untyping/2008/03/">March 2008</a></li>
                    <li><a href="/untyping/2008/02/">February 2008</a></li>
                    <li><a href="/untyping/2008/01/">January 2008</a></li>
                    <li><a href="/untyping/2007/12/">December 2007</a></li>
                    <li><a href="/untyping/2007/11/">November 2007</a></li>
                    <li><a href="/untyping/2007/10/">October 2007</a></li>
                    <li><a href="/untyping/2007/09/">September 2007</a></li>
                    <li><a href="/untyping/2007/08/">August 2007</a></li>
                    <li><a href="/untyping/2007/07/">July 2007</a></li>
                    <li><a href="/untyping/2007/06/">June 2007</a></li>
                    <li><a href="/untyping/2007/05/">May 2007</a></li>
                    <li><a href="/untyping/2007/04/">April 2007</a></li>
                    <li><a href="/untyping/2007/03/">March 2007</a></li>
                    <li><a href="/untyping/2007/02/">February 2007</a></li>
                    <li><a href="/untyping/2007/01/">January 2007</a></li>
                    <li><a href="/untyping/2006/12/">December 2006</a></li>
                    <li><a href="/untyping/2006/11/">November 2006</a></li>
                    <li><a href="/untyping/2006/10/">October 2006</a></li>
                    <li><a href="/untyping/2006/09/">September 2006</a></li>
                    <li><a href="/untyping/2006/08/">August 2006</a></li>
                    <li><a href="/untyping/2006/07/">July 2006</a></li>
                    <li><a href="/untyping/2006/06/">June 2006</a></li>
                    <li><a href="/untyping/2006/05/">May 2006</a></li>
                    <li><a href="/untyping/2006/04/">April 2006</a></li>
                    <li><a href="/untyping/2006/03/">March 2006</a></li>
                    <li><a href="/untyping/2006/02/">February 2006</a></li>
                    <li><a href="/untyping/2006/01/">January 2006</a></li>
                    <li><a href="/untyping/2005/12/">December 2005</a></li>
                    <li><a href="/untyping/2005/11/">November 2005</a></li>
                    <li><a href="/untyping/2005/10/">October 2005</a></li>
                    <li><a href="/untyping/2005/09/">September 2005</a></li>
                    <li><a href="/untyping/2005/08/">August 2005</a></li>
                    <li><a href="/untyping/2005/07/">July 2005</a></li>
                    <li><a href="/untyping/2005/06/">June 2005</a></li>
                    <li><a href="/untyping/2005/05/">May 2005</a></li>
                    <li><a href="/untyping/2005/04/">April 2005</a></li>
                  </ul>
                </li>
                <li id="categories-2" class="widget widget_categories">
                  <h2 class="widgettitle">Categories</h2>
                  <ul>
                    <li class="cat-item cat-item-10">
                      <a href="/untyping/category/business/">Business</a>
                    </li>
                    <li class="cat-item cat-item-7">
                      <a href="/untyping/category/code/">Code</a>
                    </li>
                    <li class="cat-item cat-item-11 current-cat">
                      <a aria-current="page" href="/untyping/category/design/"
                        >Design</a
                      >
                    </li>
                    <li class="cat-item cat-item-3">
                      <a href="/untyping/category/front-page/">Front page</a>
                    </li>
                    <li class="cat-item cat-item-9">
                      <a href="/untyping/category/fun/">Fun</a>
                    </li>
                    <li class="cat-item cat-item-6">
                      <a href="/untyping/category/functional-programming/"
                        >Functional Programming</a
                      >
                    </li>
                    <li class="cat-item cat-item-1">
                      <a href="/untyping/category/general/">General</a>
                    </li>
                    <li class="cat-item cat-item-12">
                      <a href="/untyping/category/javascript/">Javascript</a>
                    </li>
                    <li class="cat-item cat-item-14">
                      <a href="/untyping/category/kahu/">Kahu</a>
                    </li>
                    <li class="cat-item cat-item-4">
                      <a href="/untyping/category/myna/">Myna</a>
                    </li>
                    <li class="cat-item cat-item-13">
                      <a href="/untyping/category/racket/">Racket</a>
                    </li>
                    <li class="cat-item cat-item-8">
                      <a href="/untyping/category/scala/">Scala</a>
                    </li>
                    <li class="cat-item cat-item-5">
                      <a href="/untyping/category/web-development/"
                        >Web development</a
                      >
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <Footer />

    <script
      src="http://www.google-analytics.com/urchin.js"
      type="text/javascript"></script>
    <script type="text/javascript">
      _uacct = "UA-183641-1";
      urchinTracker();
    </script>
    <script is:inline src="//code.jquery.com/jquery-1.8.0.min.js"></script>
    <script is:inline src="/scripts/untyped.js"></script>
  </body>
</html>
